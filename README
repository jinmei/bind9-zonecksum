An extension to ISC BIND 9 for incremental zone checksum.

This repository maintains an experimental implementation of a "zone
checksum" feature on top of ISC BIND 9.  A zone checksum is a checksum
that covers all RRs of a zone to check integrity of the zone content.
Two types of checksums are supported in this implementation:
case-sensitive and case-insensitive.  The case-sensitive checksum is
calculated owner names and RDATA of RRs without any modification,
while the case-insensitive checksum converts owner names and domain
name fields of RDATA into a "normalized" form, converting all
upper-case letters to lower-case ones (for RDATA fields, this initial
implementation only supports the NS RDATA).

Any two (or more) server implementations that serve the same version
of the same zone should provide the same case-sensitive check value.
If not, there should be something wrong in the data replication.
Normally, the case-insensitive checksums are also expected match, but
a mismatch is not necessarily a serious problem; different
implementations may handle the case in a different ways.  Yet a
mismatch of case-insensitive checksums may be of some interest, since
it may suggest some non-compliant behavior such as not preserving the
case in AXFR.

These checksums can be calculated incrementally, i.e, they can be
updated as the zone is dynamically modified via dynamic updates or
IXFR, without re-scanning the entire zone data.  This characteristic
would be particularly useful for very large zones.

== HOW TO BUILD ==

Nothing special: this feature does not require any additional
dependency beyond building the standard BIND 9.  It does not require
any ./configure option (actually it's impossible to disable this
feature).

== USAGE ==

Checksums are automatically calculated at the time of zone loading and
maintained as the zone database is updated.  No configuration is
required.

There are several ways to examine the checksums:

1. log messages on completion of load or xfr-in.

Information log messages on these events now include the latest
checksum:

10-Feb-2014 00:03:00.189 zone jinmei.org/IN: loaded serial 2014011402 (checksum: 0xe9f/0xcce0)

Where 0xe9f is the case-insensitive checksum, and 0xcce0 is the
case-sensitive checksum.  Other examples follow this convention.

10-Feb-2014 00:03:40.339 zone jinmei.org/IN: transferred serial 2014011401 (checksum: 0xdcad/0xb9d0)

2. an extension to rndc: 'rndc status zone'

The rndc utility is extended so its 'status' command takes additional
arguments.  If the additional arguments specify a valid zone served by
the running named, it shows the zone's SOA serial and checksums.

% ./rndc/rndc -c rndc.conf status jinmei.org
serial: 2014011401, checksum: 0xdcad/0xb9d0

3. named-checkzone

named-checkzone uses the same log message mentioned above, so it can
also be used to see the checksums.  While this is an expensive
operation, it might be useful to calculate the checksums of a zone
served by other implementations than BIND 9.  You'd first "import" the
data via AXFR and then run named-checkzone to calculate the checksum.

% ./named-checkzone -i none -k ignore jinmei.org ~/tmp/jinmei3.zone
zone jinmei.org/IN: loaded serial 2014011401 (DNSSEC signed) (checksum: 0xdcad/0xb9d0)
